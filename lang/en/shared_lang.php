<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Shared localization resources
    |--------------------------------------------------------------------------
    |
    | The following language lines are used to support the shared component localization.
    |
    */
    'label.account_id' => 'Account ID',
    'label.memo' => 'Memo',
    'label.created_at' => 'Created at',
    'label.updated_at' => 'Updated at',
    'label.name' => 'Name',
    'label.value' => 'Value',
    'label.description' => 'Description',
    'label.decimals' => 'Decimals',
    'label.id' => 'ID',
    'label.id_type' => 'ID type',
    'label.status' => 'Status',
    'label.errors' => 'Errors',
    'label.tx_started_at' => 'Transaction started at',
    'label.tx_completed_at' => 'Transaction completed at',
    'label.tx_updated_at' => 'Transaction updated at',
    'label.tx_dates' => 'Transaction timestamps',
    'label.transfer_received_at' => 'Transfer received at',
    'label.amount_in' => 'Amount in',
    'label.amount_out' => 'Amount out',
    'label.amount_fee' => 'Amount fee',
    'label.amount_in_asset' => 'Amount in asset',
    'label.amount_out_asset' => 'Amount out asset',
    'label.amount_fee_asset' => 'Amount fee asset',
    'label.amount_expected' => 'Amount expected',
    'label.amount_info' => 'Amount info',
    'label.status.refunded' => 'Refunded',
    'label.refunds' => 'Refunds',
    'label.refund_memo' => 'Refund memo',
    'label.refund_memo_type' => 'Refund memo type',
    'label.refund_info' => 'Refund info',
    'label.refunded' => 'Refunded',
    'label.lang' => 'Language',
    'label.memo_type' => 'Memo type',
    'label.memo_type.text' => 'Text',
    'label.memo_type.id' => 'ID',
    'label.memo_type.hash' => 'Hash',
    'label.asset' => 'Asset',
    'label.total' => 'Total',
    'label.amount' => 'Amount',
    'label.fee_details' => 'Fee details',
    'label.fee_details.description' => 'Description of fee charged',
    'label.refunds.amount_refunded' => 'Amount refunded',
    'label.refunds.amount_fee' => 'Amount fee',
    'label.fee' => 'Fee',
    'label.view' => 'View',
    'label.add_entity' => 'Add :entity',
    'label.field_name' => 'Field name',
    'label.destination_account' => 'Destination account',
    'label.source_account' => 'Source account',
    'label.payment_type' => 'Payment type',
    'label.envelope' => 'Envelope',
    'error.unauthorized' => 'Unauthorized!',
    'error.unauthorized_with_msg_error' => 'Unauthorized: :error',
    'error.invalid_account_id' => 'The provided account ID is invalid!',
    'error.internal_server' => 'Internal server error: :error_type.',
    'error.invalid_config' => 'Invalid config',
    'error.unauthorized.missing_stellar_auth' => 'Unauthorized! Use SEP-10 to authenticate.',
    'error.unauthorized.invalid_token' => 'Unauthorized! Invalid token data: :exception',
    'label.type' => 'Type',
    'error.jwt.invalid' => 'Invalid JWT token.',
    'error.jwt.account_id_not_found' => 'Account id not found in JWT token.',
    'error.anchor_failure' => 'Anchor failure.',
    'error.unexpected' => 'An unexpected error occurred. Please contact the Anchor administrator for assistance.',
    'error.request.invalid_lang' => 'Invalid language code provided. The language code must be a string.',
    'error.request.invalid_request_type' => 'Invalid request type :content_type',
    'error.request.invalid_unknown_endpoint' => 'Invalid request, unknown endpoint.',
    'error.request.invalid_method_not_supported' => 'Invalid request, method not supported.',
    'error.request.invalid_multipart_form_data' => 'Could not parse multipart/form-data: :previous_exception',
    'error.request.no_content_type_in_header' => 'No content type in header.',
    'error.request.content_type_is_not_multi_form_data' => 'Content type is not multipart/form-data.',
    'error.request.boundary_not_parsable' => 'Could not parse boundary from header.',
    'error.request.body_is_empty' => 'Body is empty.',
    'error.request.body_parts_not_found' => 'Body parts not found.',
    'error.request.header_parts_no_parsable' => 'Could not split header.',
    'error.request.refund_memo.must_be_string' => 'Refund memo must be a string.',
    'error.request.refund_memo.type_without_memo' => 'Refund memo type is specified but refund memo missing.',
    'error.request.refund_memo.memo_without_type' => 'Refund memo is specified but refund memo type missing.',
    'error.request.refund_memo.type_must_be_string' => 'Refund memo type must be a string.',
    'error.request.refund_memo.type_missing' => 'Missing refund memo type.',
    'error.request.refund_memo.type_not_supported' => 'Refund memo type: :memoType not supported.',
    'error.request.memo.invalid_memo' => 'Invalid memo.',
    'error.request.memo.type_missing' => 'The memo_type field is required if memo is specified.',
    'error.request.memo.invalid_by_id' => 'Invalid memo :memo of type id.',
    'error.request.memo.invalid_by_text' => 'Invalid memo :memo of type text.',
    'error.request.memo.invalid_by_hash' => 'Invalid memo :memo of type hash.',
    'error.request.memo.unsupported_memo_type_value' => 'Unsupported memo type value: :memoType.',
    'error.request.memo.invalid_memo_type' => 'Invalid memo type: :memoType.',
    'error.request.memo.only_memo_type_id_supported' => 'Only memo type id is supported.',
    'error.request.field_must_be_string' => ':field must be a string.',
    'error.request.field_must_be_an_int' => ':field must be an integer.',
    'error.request.field_must_be_a_float' => ':field must be an float.',
    'error.request.field_required' => ':field is required.',
    'error.request.date.not_valid_8601_date' => ':field is not a valid 8601 date.',
    'error.quotes_service_not_available' => 'Unable to access quotes.',
    'error.general.transaction_not_found' => 'Transaction not found.',
    'error.request.invalid_http_request_body' => 'Invalid request body.',
    'error.transaction.id_or_stellar_or_transaction_must_be_specified' =>
        'One of id, stellar_transaction_id or external_transaction_id is required.',
    'error.amount.less_or_equal_to_zero' => 'Amount must be greater than zero.',
];
